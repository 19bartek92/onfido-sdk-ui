name: Node.js CI

on:
  - pull_request
  - push

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [8.x, 10.x, 12.x]

    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      uses: actions/cache@v1
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Set up test environment
      run:
        sh chmod ugo+x ./test/scripts/setup_test_environment.sh
        sh sudo ./test/scripts/setup_test_environment.sh

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm --production=false install
    # - run: sudo apt-get install xvfb
    # - run: xvfb-run --auto-servernum npm tes
    - run:
        npm run build --if-present
        if [ "${{TRAVIS_PULL_REQUEST}}" != "false" ]; then audit-ci --moderate; fi
        npm run build
        if [ "$NODE_ENV" == "production" ]; then npm run bundlesize; fi
        sh chmod ugo+x ./test.sh
        sh ./test.sh
      env:
        CI: true
        NODE_ENV: test

    - name: Deploy to surge
    - run:
        python node_modules/travis-weigh-in/weigh_in.py dist/onfido.min.js
        sh chmod ugo+x ./deploy.sh
        sh ./deploy.sh