@import (less) "../Theme/constants.css";

.rectangle {
  //default value of react-webcam https://github.com/cezary/react-webcam
  @width-frame: 640;
  @height-frame: 480;

  //Spec of overlay
  @width-percent: 80%;
  @aspect-ratio: 1.57;

  /*
    From the equation below one can find out @height-percent
    aspect-ratio = (width-frame * width-percent) / (height-frame * height-percent)
   */
  @height-percent: (@width-frame * @width-percent) / (@height-frame * @aspect-ratio);

  width: @width-percent;
  height: @height-percent;
}

.circle{
  width: 45%;
  max-height: 80%;
  border-radius: 100%;
}

.circle:before {
    content: "";
    display: block;
    padding-top: 125%;
}

.video-overlay {
  /* Relatively positioned so absolute children are bound to this overlay */
  position: relative;
  overflow: hidden;
  margin-top: 16px;
  width: 100%;
}

.video-overlay:before {
  content: "";
  display: block;
  padding-top: 70%;
}

.overlay {
  width: 100%;
  height: 100%;
  top: 0;
  position: absolute;
}

.captureActions {
  margin: 15px 0 55px;
}

.video {
  max-width: 100%;
  display: block;
  position: absolute;
  width: auto;
  height: 100%;
  top: 0;
  margin: auto;
  object-fit: cover;
  /*Mirroring transform: scale(-1, 1); */
}

.uploadFallback{
  display: block;
  position: absolute;
  bottom: 0;
  right: 0;
  padding-right: 7px;
  padding-bottom: 3px;

  & button{
    /* ref: http://stackoverflow.com/a/12642009/689223 */
    /* Remove all decorations to look like normal text */
    background: none;
    border: none;
    display: inline;
    font: inherit;
    margin: 0;
    padding: 0;
    outline: none;
    outline-offset: 0;
    /* Additional styles to look like a link */
    cursor: pointer;

    /*Custom style*/
    color: white;
    &:hover{
      text-decoration: underline;
    }
  }
}
